version: '3.5'

networks:
  usecase-4-net:
    driver: bridge
    ipam:
     config:
       - subnet: 15.5.0.0/16
         gateway: 15.5.0.1 


services:
  
  pulsar-server:
    image: apachepulsar/pulsar-all:3.1.1
    container_name: pulsar-server
    hostname: pulsar-server-container
    volumes:
      #mount directory with compiled jar file
      - ./sink-function/target/sink-function-0.0.1.jar:/pulsar/connectors/sink-function-0.0.1.jar
    ports:
    - 8080:8080
    - 6650:6650
    networks:
      usecase-4-net:
        ipv4_address: 15.5.0.2
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8080/admin/v2/clusters/standalone
    environment:
      - advertisedAddress=pulsar-server
      - webServicePort=8080
      - webServiceHost=pulsar-server
      - brokerServicePort=6650
      - webServiceEnabled=true
      - advertisedListeners=external:pulsar://pulsar-server:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
      - functionsWorkerEnabled=true 
      - authorizationAllowAnonymous=true
    command: bash -c "bin/apply-config-from-env.py conf/standalone.conf && exec bin/pulsar standalone "


  database:
    image: postgres:16
    container_name: POSTGRES_DB
    hostname: POSTGRES_DB
    restart: always
    networks:
      usecase-4-net:
        ipv4_address: 15.5.0.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sinkdb
      POSTGRES_USER: usr
      POSTGRES_PASSWORD: 1234567
    volumes:
      - ./sink-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - database
    networks:
      usecase-4-net:
        ipv4_address: 15.5.0.4
    ports:
      - "8082:8080"
    environment:
      ADMINER_DEFAULT_SERVER: POSTGRES_DB:5432  