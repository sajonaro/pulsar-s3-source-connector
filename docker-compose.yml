version: '3.5'

networks:
  pulsar-net:
    driver: bridge

volumes:
  zookeeperdata:
    driver: local
  bookkeeperdata:
    driver: local
  pulsar-manager-data:
    driver: local

services:

  localstack:
    image: localstack/localstack:1.0.4
    hostname: localstack
    networks:
      - pulsar-net
    ports:
      - "4566:4566"
    environment:
      SERVICES: s3:4566
      HOSTNAME: localstack
      HOSTNAME_EXTERNAL: localstack
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: user
      AWS_SECRET_ACCESS_KEY: password

  aws-cli:
    image: amazon/aws-cli
    networks:
      - pulsar-net
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - ./s3-setup/csv-files:/aws
    environment:
      - AWS_ACCESS_KEY_ID=user
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: >
      "
        aws --endpoint-url=http://localstack:4566 s3api create-bucket --bucket contosobucket --region us-east-1
        aws --endpoint-url=http://localstack:4566 s3 cp contoso_employees.csv s3://contosobucket/
        aws --endpoint-url=http://localstack:4566 s3api list-buckets 
      "

  # Start broker
  pulsar-server:
    image: apachepulsar/pulsar-all:3.1.1
    container_name: pulsar-server
    hostname: pulsar-server
    volumes:
      - ./connector/target/custom-s3-source-connector-0.0.1.jar:/pulsar/connectors/custom-s3-source-connector-0.0.1.jar
      - ./connector/scripts/enable_connector.sh:/pulsar/enable_connector.sh
    ports:
    - 8080:8080
    - 6650:6650
    networks:
    - pulsar-net
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8080/admin/v2/clusters/standalone
    environment:
      - advertisedAddress=pulsar-server
      - advertisedListeners=external:pulsar://127.0.0.1:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
      - functionsWorkerEnabled=true  
      - authorizationAllowWildcardsMatching=true 
    command: bash -c "bin/apply-config-from-env.py conf/standalone.conf && exec bin/pulsar standalone "

  #dashboard
  pulsar-dashboard:
    image: apachepulsar/pulsar-dashboard
    container_name: dashboard
    hostname: dashboard
    restart: on-failure
    networks:
      - pulsar-net
    ports:
      - "80:80"
    environment:
      SERVICE_URL: http://pulsar-server:8080/
    depends_on:
      pulsar-server:
        condition: service_healthy

  #manager  is available via http://localhost:9527
  # login/password is admin/apachepulsar  (if set-login.sh executed successfully)
  pulsar-manager:
    build:
      context: ./pulsar-manager
      dockerfile: Dockerfile
    container_name: manager
    hostname: manager
    networks:
      - pulsar-net
    ports:
      - "7750:7750"
      - "9527:9527"
    depends_on:
      pulsar-server:
        condition: service_healthy
    environment:
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties 